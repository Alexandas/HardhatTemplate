/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockToken, MockTokenInterface } from "../MockToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600981526826b7b1b5aa37b5b2b760b91b6020808301918252835180850190945260048452634d6f636b60e01b9084015281519192916200005f91600391620001ac565b50805162000075906004906020840190620001ac565b505050620000926200008c620000b060201b60201c565b620000b4565b620000aa336b204fce5e3e2502611000000062000106565b62000319565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001385760405162461bcd60e51b81526004016200012f9062000252565b60405180910390fd5b80600260008282546200014c9190620002aa565b90915550506001600160a01b038216600081815260208190526040808220805485019055517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90620001a0908590620002c5565b60405180910390a35050565b828054620001ba90620002e8565b90600052602060002090601f016020900481019282620001de576000855562000229565b82601f10620001f957805160ff191683800117855562000229565b8280016001018555821562000229579182015b82811115620002295782518255916020019190600101906200020c565b50620002379291506200023b565b5090565b5b808211156200023757600081556001016200023c565b602080825281016200028e81601f81527f45524332303a206d696e7420746f20746865207a65726f206164647265737300602082015260400190565b92915050565b634e487b7160e01b600052601160045260246000fd5b60008219821115620002c057620002c062000294565b500190565b818152602081016200028e565b634e487b7160e01b600052602260045260246000fd5b600281046001821680620002fd57607f821691505b60208210811415620003135762000313620002d2565b50919050565b610e9080620003296000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a257806395d89b411161007157806395d89b4114610219578063a457c2d714610221578063a9059cbb14610234578063dd62ed3e14610247578063f2fde38b1461025a57600080fd5b806370a08231146101bc578063715018a6146101e557806379cc6790146101ed5780638da5cb5b1461020057600080fd5b8063313ce567116100de578063313ce56714610172578063395093511461018157806340c10f191461019457806342966c68146101a957600080fd5b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461014e57806323b872dd1461015f575b600080fd5b61011861026d565b6040516101259190610885565b60405180910390f35b61014161013c3660046108de565b6102ff565b6040516101259190610925565b6002545b6040516101259190610939565b61014161016d366004610947565b610319565b601260405161012591906109a0565b61014161018f3660046108de565b61033d565b6101a76101a23660046108de565b61035f565b005b6101a76101b73660046109ae565b610375565b6101526101ca3660046109d7565b6001600160a01b031660009081526020819052604090205490565b6101a7610382565b6101a76101fb3660046108de565b610396565b6005546001600160a01b03166040516101259190610a01565b6101186103ab565b61014161022f3660046108de565b6103ba565b6101416102423660046108de565b610400565b610152610255366004610a0f565b61040e565b6101a76102683660046109d7565b610439565b60606003805461027c90610a58565b80601f01602080910402602001604051908101604052809291908181526020018280546102a890610a58565b80156102f55780601f106102ca576101008083540402835291602001916102f5565b820191906000526020600020905b8154815290600101906020018083116102d857829003601f168201915b5050505050905090565b60003361030d818585610470565b60019150505b92915050565b600033610327858285610524565b61033285858561056e565b506001949350505050565b60003361030d818585610350838361040e565b61035a9190610a9b565b610470565b61036761065e565b6103718282610688565b5050565b61037f338261071e565b50565b61038a61065e565b61039460006107d5565b565b6103a1823383610524565b610371828261071e565b60606004805461027c90610a58565b600033816103c8828661040e565b9050838110156103f35760405162461bcd60e51b81526004016103ea90610af8565b60405180910390fd5b6103328286868403610470565b60003361030d81858561056e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61044161065e565b6001600160a01b0381166104675760405162461bcd60e51b81526004016103ea90610b4b565b61037f816107d5565b6001600160a01b0383166104965760405162461bcd60e51b81526004016103ea90610b9c565b6001600160a01b0382166104bc5760405162461bcd60e51b81526004016103ea90610beb565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610517908590610939565b60405180910390a3505050565b6000610530848461040e565b90506000198114610568578181101561055b5760405162461bcd60e51b81526004016103ea90610c32565b6105688484848403610470565b50505050565b6001600160a01b0383166105945760405162461bcd60e51b81526004016103ea90610c84565b6001600160a01b0382166105ba5760405162461bcd60e51b81526004016103ea90610cd4565b6001600160a01b038316600090815260208190526040902054818110156105f35760405162461bcd60e51b81526004016103ea90610d27565b6001600160a01b0380851660008181526020819052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610651908690610939565b60405180910390a3610568565b6005546001600160a01b031633146103945760405162461bcd60e51b81526004016103ea90610d69565b6001600160a01b0382166106ae5760405162461bcd60e51b81526004016103ea90610dad565b80600260008282546106c09190610a9b565b90915550506001600160a01b038216600081815260208190526040808220805485019055517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610712908590610939565b60405180910390a35050565b6001600160a01b0382166107445760405162461bcd60e51b81526004016103ea90610dfb565b6001600160a01b0382166000908152602081905260409020548181101561077d5760405162461bcd60e51b81526004016103ea90610e4a565b6001600160a01b0383166000818152602081905260408082208585039055600280548690039055519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610517908690610939565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60005b8381101561084257818101518382015260200161082a565b838111156105685750506000910152565b600061085d825190565b808452602084019350610874818560208601610827565b601f01601f19169290920192915050565b602080825281016108968184610853565b9392505050565b60006001600160a01b038216610313565b6108b78161089d565b811461037f57600080fd5b8035610313816108ae565b806108b7565b8035610313816108cd565b600080604083850312156108f4576108f4600080fd5b600061090085856108c2565b9250506020610911858286016108d3565b9150509250929050565b8015155b82525050565b60208101610313828461091b565b8061091f565b602081016103138284610933565b60008060006060848603121561095f5761095f600080fd5b600061096b86866108c2565b935050602061097c868287016108c2565b925050604061098d868287016108d3565b9150509250925092565b60ff811661091f565b602081016103138284610997565b6000602082840312156109c3576109c3600080fd5b60006109cf84846108d3565b949350505050565b6000602082840312156109ec576109ec600080fd5b60006109cf84846108c2565b61091f8161089d565b6020810161031382846109f8565b60008060408385031215610a2557610a25600080fd5b6000610a3185856108c2565b9250506020610911858286016108c2565b634e487b7160e01b600052602260045260246000fd5b600281046001821680610a6c57607f821691505b60208210811415610a7f57610a7f610a42565b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610aae57610aae610a85565b500190565b602581526000602082017f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77815264207a65726f60d81b602082015291505b5060400190565b6020808252810161031381610ab3565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b60208201529150610af1565b6020808252810161031381610b08565b602481526000602082017f45524332303a20617070726f76652066726f6d20746865207a65726f206164648152637265737360e01b60208201529150610af1565b6020808252810161031381610b5b565b602281526000602082017f45524332303a20617070726f766520746f20746865207a65726f206164647265815261737360f01b60208201529150610af1565b6020808252810161031381610bac565b601d81526000602082017f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000815291505b5060200190565b6020808252810161031381610bfb565b602581526000602082017f45524332303a207472616e736665722066726f6d20746865207a65726f206164815264647265737360d81b60208201529150610af1565b6020808252810161031381610c42565b602381526000602082017f45524332303a207472616e7366657220746f20746865207a65726f206164647281526265737360e81b60208201529150610af1565b6020808252810161031381610c94565b602681526000602082017f45524332303a207472616e7366657220616d6f756e7420657863656564732062815265616c616e636560d01b60208201529150610af1565b6020808252810161031381610ce4565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657291019081526000610c2b565b6020808252810161031381610d37565b601f81526000602082017f45524332303a206d696e7420746f20746865207a65726f20616464726573730081529150610c2b565b6020808252810161031381610d79565b602181526000602082017f45524332303a206275726e2066726f6d20746865207a65726f206164647265738152607360f81b60208201529150610af1565b6020808252810161031381610dbd565b602281526000602082017f45524332303a206275726e20616d6f756e7420657863656564732062616c616e815261636560f01b60208201529150610af1565b6020808252810161031381610e0b56fea2646970667358221220e95bb6fc7319f35b6a117633458bfa1dd88a1bbaa76753a4b157787c6fcdbecc64736f6c63430008090033";

export class MockToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockToken> {
    return super.deploy(overrides || {}) as Promise<MockToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockToken {
    return super.attach(address) as MockToken;
  }
  connect(signer: Signer): MockToken__factory {
    return super.connect(signer) as MockToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockTokenInterface {
    return new utils.Interface(_abi) as MockTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockToken {
    return new Contract(address, _abi, signerOrProvider) as MockToken;
  }
}
